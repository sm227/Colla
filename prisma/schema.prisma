generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  projects  Project[]
}

model Task {
  id          String    @id @default(cuid())
  title       String
  description String?
  status      String
  priority    String
  assignee    String?
  dueDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  projectId   String?
  project     Project?  @relation(fields: [projectId], references: [id])
  comments    Comment[]
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  tasks       Task[]
<<<<<<< HEAD
  userId      String?
  user        User?     @relation(fields: [userId], references: [id])
  documents   Document[]
}

model Document {
  id          String   @id @default(cuid())
  title       String
  content     String
  emoji       String?
  isStarred   Boolean  @default(false)
  folder      String?
  tags        String?  // JSON array stored as string
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  projectId   String?
  project     Project?  @relation(fields: [projectId], references: [id])
}
=======
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  author    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  taskId    String
  task      Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
} 
>>>>>>> 2230305d79ec7c6c99424cceaead713b23ecc628
